exports[`App test suite renders without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="App">
    <div
        className="site-content">
        <Header />
        <div
            className="hero"
            data-bg-image="images/banner.png">
            <div
                className="container">
                <SearchBar
                    onSearchSubmit={[Function]} />
            </div>
        </div>
        <ForecastTable
            city="New York"
            error={false}
            weatherList={Array []} />
    </div>
</div>,
  "nodes": Array [
    <div
      className="App">
      <div
            className="site-content">
            <Header />
            <div
                  className="hero"
                  data-bg-image="images/banner.png">
                  <div
                        className="container">
                        <SearchBar
                              onSearchSubmit={[Function]} />
                  </div>
            </div>
            <ForecastTable
                  city="New York"
                  error={false}
                  weatherList={Array []} />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <App />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": App {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "fetchWeathers": [Function],
        "onSearchCityChange": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "fetchError": false,
          "searchCity": "New York",
          "weatherList": Array [],
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="App">
          <div
                    className="site-content">
                    <Header />
                    <div
                              className="hero"
                              data-bg-image="images/banner.png">
                              <div
                                        className="container">
                                        <SearchBar
                                                  onSearchSubmit={[Function]} />
                              </div>
                    </div>
                    <ForecastTable
                              city="New York"
                              error={false}
                              weatherList={Array []} />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="App">
          <div
                    className="site-content">
                    <Header />
                    <div
                              className="hero"
                              data-bg-image="images/banner.png">
                              <div
                                        className="container">
                                        <SearchBar
                                                  onSearchSubmit={[Function]} />
                              </div>
                    </div>
                    <ForecastTable
                              city="New York"
                              error={false}
                              weatherList={Array []} />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App />,
}
`;
