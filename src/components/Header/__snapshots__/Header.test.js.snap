exports[`test renders without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="site-header">
    <div
        className="container">
        <a
            className="branding"
            href="index.html">
            <img
                alt=""
                className="logo"
                src="images/logo.png" />
            <div
                className="logo-type">
                <h1
                    className="site-title">
                    SkyCast
                </h1>
                <small
                    className="site-description">
                    Weather at your finger tip
                </small>
            </div>
        </a>
    </div>
</div>,
  "nodes": Array [
    <div
      className="site-header">
      <div
            className="container">
            <a
                  className="branding"
                  href="index.html">
                  <img
                        alt=""
                        className="logo"
                        src="images/logo.png" />
                  <div
                        className="logo-type">
                        <h1
                              className="site-title">
                              SkyCast
                        </h1>
                        <small
                              className="site-description">
                              Weather at your finger tip
                        </small>
                  </div>
            </a>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Header />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="site-header">
          <div
                    className="container">
                    <a
                              className="branding"
                              href="index.html">
                              <img
                                        alt=""
                                        className="logo"
                                        src="images/logo.png" />
                              <div
                                        className="logo-type">
                                        <h1
                                                  className="site-title">
                                                  SkyCast
                                        </h1>
                                        <small
                                                  className="site-description">
                                                  Weather at your finger tip
                                        </small>
                              </div>
                    </a>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="site-header">
          <div
                    className="container">
                    <a
                              className="branding"
                              href="index.html">
                              <img
                                        alt=""
                                        className="logo"
                                        src="images/logo.png" />
                              <div
                                        className="logo-type">
                                        <h1
                                                  className="site-title">
                                                  SkyCast
                                        </h1>
                                        <small
                                                  className="site-description">
                                                  Weather at your finger tip
                                        </small>
                              </div>
                    </a>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Header />,
}
`;
